{"version":3,"file":"index.mjs","sources":["../../../native/useFirebaseAuth.ts","../../../native/useFirebaseAuthProvider.ts","../../../native/token.ts","../../../native/config.ts"],"sourcesContent":["import auth, {\n  FirebaseAuthTypes,\n  sendEmailVerification,\n} from \"@react-native-firebase/auth\";\nimport {\n  useFirebaseAuthCommon,\n  UseFirebaseAuth,\n  AuthResponse,\n  LoginProps,\n  ERROR_KEYS,\n} from \"@gaddario98/react-firebase\";\nimport { useCallback } from \"react\";\nimport { appleAuth } from \"@invertase/react-native-apple-authentication\";\nimport {\n  GoogleSignin,\n  NativeModuleError,\n  statusCodes,\n} from \"@react-native-google-signin/google-signin\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const useFirebaseAuth = (): UseFirebaseAuth<\n  FirebaseAuthTypes.UserCredential[\"user\"]\n> => {\n  const { t } = useTranslation(\"auth\");\n  const { loading, setLoading, error, setError, handleAuthError } =\n    useFirebaseAuthCommon();\n\n  const withErrorHandling = useCallback(\n    async <T extends AuthResponse<FirebaseAuthTypes.UserCredential[\"user\"]>>(\n      operation: () => Promise<FirebaseAuthTypes.UserCredential>\n    ): Promise<T> => {\n      setError(null);\n      setLoading(true);\n      try {\n        const result = await operation();\n        //  setAuth(result.user);\n        return {\n          success: true,\n          user: result.user,\n        } as T;\n      } catch (error) {\n        const errorMessage = handleAuthError(error);\n        setError(errorMessage);\n        return {\n          success: false,\n          error: errorMessage,\n        } as T;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [handleAuthError, setError, setLoading]\n  );\n\n  const loginWithEmail = useCallback(\n    ({ email, password }: LoginProps) =>\n      withErrorHandling(async () => {\n        return await auth().signInWithEmailAndPassword(email, password);\n      }),\n    [withErrorHandling]\n  );\n\n  const registerWithEmail = useCallback(\n    (email: string, password: string, name: string) =>\n      withErrorHandling(async () => {\n        const credential = await auth().createUserWithEmailAndPassword(\n          email,\n          password\n        );\n        sendEmailVerification(credential.user);\n        await credential.user.updateProfile({ displayName: name });\n        return credential;\n      }),\n    [withErrorHandling]\n  );\n\n  const logout = async () => {\n    setLoading(true);\n    try {\n      await auth().signOut();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loginWithGoogle = useCallback(\n    async () =>\n      withErrorHandling(async () => {\n        try {\n          GoogleSignin.configure({\n            webClientId: process.env.EXPO_PUBLIC_GOOGLEWEBCLIENTID,\n            scopes: [\"https://www.googleapis.com/auth/drive.readonly\"],\n          });\n\n          await GoogleSignin.hasPlayServices();\n          const signInResult = await GoogleSignin.signIn();\n\n          // Corretto l'accesso alla proprietà idToken\n          if (!signInResult.data?.idToken) {\n            throw new Error(t(ERROR_KEYS.GOOGLE_SIGN_IN_FAILED));\n          }\n\n          const credential = auth.GoogleAuthProvider.credential(\n            signInResult.data?.idToken\n          );\n\n          return auth().signInWithCredential(credential);\n        } catch (error: unknown) {\n          // Gestione specifica degli errori di Google Sign-In\n          if (error instanceof Error) {\n            const nativeError = error as NativeModuleError;\n            if (nativeError.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {\n              throw new Error(t(ERROR_KEYS.PLAY_SERVICES_NOT_AVAILABLE));\n            }\n            // Se è un altro tipo di errore di Google Sign-In\n            if (nativeError.code) {\n              throw new Error(t(ERROR_KEYS.GOOGLE_SIGN_IN_FAILED));\n            }\n          }\n          // Rilancia l'errore per la gestione generica\n          throw error;\n        }\n      }),\n    [withErrorHandling, t]\n  );\n\n  const loginWithApple = useCallback(\n    async () =>\n      withErrorHandling(async () => {\n        const appleAuthRequestResponse = await appleAuth.performRequest({\n          requestedOperation: appleAuth.Operation.LOGIN,\n          requestedScopes: [appleAuth.Scope.FULL_NAME, appleAuth.Scope.EMAIL],\n        });\n\n        if (!appleAuthRequestResponse.identityToken) {\n          throw new Error(t(ERROR_KEYS.APPLE_SIGN_IN_FAILED));\n        }\n        const credentialState = await appleAuth.getCredentialStateForUser(\n          appleAuthRequestResponse.user\n        );\n        if (credentialState === appleAuth.State.AUTHORIZED) {\n          const { identityToken, nonce } = appleAuthRequestResponse;\n          const appleCredential = auth.AppleAuthProvider.credential(\n            identityToken,\n            nonce\n          );\n          return auth().signInWithCredential(appleCredential);\n          // user is authenticated\n        } else {\n          throw new Error();\n        }\n      }),\n    [withErrorHandling, t]\n  );\n\n  return {\n    loading,\n    error,\n    loginWithEmail,\n    registerWithEmail,\n    logout,\n    loginWithApple,\n    loginWithGoogle,\n  };\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { AuthState } from \"@gaddario98/react-auth\";\nimport {\n  getAuth,\n  getIdTokenResult,\n  onIdTokenChanged,\n  reload,\n} from \"@react-native-firebase/auth\";\nimport { useFirebaseAuthProviderCommon } from \"@gaddario98/react-firebase\";\n\n// Calculate next refresh delay from token result with safety bounds\nconst nextRefreshDelayMs = (expirationTimeISO: string): number => {\n  const now = Date.now();\n  const expirationTime = Date.parse(expirationTimeISO);\n  const timeUntilExp = Math.max(0, expirationTime - now);\n  // refresh 30s before expiry; clamp between 30s and 55m\n  const SAFETY = 30 * 1000;\n  const MIN = 30 * 1000;\n  const MAX = 55 * 60 * 1000;\n  const desired = Math.max(MIN, timeUntilExp - SAFETY);\n  return Math.min(MAX, desired);\n};\n\nexport interface FirebaseProviderProps {\n  initializeNotifications: (id: string) => Promise<void>;\n  setFirebaseAuth: (auth?: AuthState) => void;\n}\nexport const useFirebaseAuthProvider = ({\n  initializeNotifications,\n  setFirebaseAuth,\n}: FirebaseProviderProps) => {\n  const { loading, setLoading, authRef } = useFirebaseAuthProviderCommon();\n  const [, setAuthState] = useState<AuthState | undefined>(undefined);\n  const refreshTimeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  // Helper to clear any scheduled fallback refresh (memoized)\n  const clearRefreshTimeout = useCallback(() => {\n    if (refreshTimeoutRef.current) {\n      clearTimeout(refreshTimeoutRef.current);\n      refreshTimeoutRef.current = null;\n    }\n  }, []);\n\n  // Schedule a safe fallback refresh slightly before token expiration. (memoized)\n  const scheduleFallbackRefresh = useCallback(async () => {\n    try {\n      const auth = getAuth();\n      const user = auth.currentUser;\n      if (!user) {\n        clearRefreshTimeout();\n        return;\n      }\n      // Prefer using getIdTokenResult if available for proper expiration time\n      let expirationTimeISO: string | undefined;\n      try {\n        const tokenResult = await getIdTokenResult(user, false);\n        expirationTimeISO = tokenResult?.expirationTime;\n      } catch {\n        // If not available, set a conservative default ~55m from now\n        expirationTimeISO = new Date(Date.now() + 55 * 60 * 1000).toISOString();\n      }\n      if (!expirationTimeISO) return;\n      const delay = nextRefreshDelayMs(expirationTimeISO);\n      clearRefreshTimeout();\n      refreshTimeoutRef.current = setTimeout(async () => {\n        try {\n          // Force a refresh; onIdTokenChanged will fire and reschedule.\n          await user.getIdToken(true);\n        } catch (err) {\n          console.error(\"Fallback token refresh error:\", err);\n        }\n      }, delay);\n    } catch (err) {\n      console.error(\"Error scheduling fallback token refresh:\", err);\n    }\n  }, [clearRefreshTimeout]);\n\n  // Update and propagate AuthState (memoized)\n  const updateAuthState = useCallback(\n    async (\n      uidChanged: boolean,\n      user: NonNullable<ReturnType<typeof getAuth>[\"currentUser\"]>\n    ) => {\n      // Prefer using getIdTokenResult to match web behavior; fallback to getIdToken\n      let token: string | undefined;\n      try {\n        const tokenResult = await getIdTokenResult(user, false);\n        token = tokenResult?.token ?? (await user.getIdToken());\n      } catch {\n        token = await user.getIdToken();\n      }\n\n      const newAuthState: AuthState = {\n        accountVerified: user.emailVerified || !!user.phoneNumber,\n        id: user.uid,\n        isLogged: true,\n        token: token ?? \"\",\n        phoneNumber: user.phoneNumber ?? \"\",\n        email: user.email ?? \"\",\n      };\n\n      setFirebaseAuth?.(newAuthState);\n      setAuthState(newAuthState);\n      authRef.current = newAuthState;\n\n      try {\n        await initializeNotifications(newAuthState.id);\n      } catch (e) {\n        console.error(\"initializeNotifications error:\", e);\n      }\n\n      await scheduleFallbackRefresh();\n    },\n    [initializeNotifications, setFirebaseAuth, authRef, scheduleFallbackRefresh]\n  );\n\n\n  useEffect(() => {\n    const auth = getAuth();\n    let initialized = false;\n\n    const unsubscribe = onIdTokenChanged(auth, async (user) => {\n      try {\n        if (user) {\n          const prev = authRef.current;\n          const uidChanged = prev?.id !== user.uid;\n          await updateAuthState(uidChanged, user);\n        } else {\n          // Logged out\n          clearRefreshTimeout();\n          setAuthState(undefined);\n          authRef.current = undefined;\n          setFirebaseAuth?.(undefined);\n        }\n      } catch (error) {\n        console.error(\"onIdTokenChanged handler error:\", error);\n      } finally {\n        if (!initialized) {\n          initialized = true;\n          // Small delay to keep UX parity with web behavior\n          setTimeout(() => setLoading(false), 300);\n        }\n      }\n    });\n\n    return () => {\n      unsubscribe();\n      clearRefreshTimeout();\n    };\n  }, [\n    setLoading,\n    updateAuthState,\n    scheduleFallbackRefresh,\n    clearRefreshTimeout,\n  ]);\n\n  useEffect(() => {\n    const currentUser = getAuth().currentUser;\n    if (currentUser) {\n      reload(currentUser);\n    }\n  }, []);\n\n  return { loading };\n};\n","import { getAuth, getIdToken } from '@react-native-firebase/auth';\n\nexport const getToken = async() => {\n  const user = getAuth();\n\n  if (user?.currentUser) {\n    const token = await getIdToken(user.currentUser);\n    return  `Bearer ${token}`;\n  }\n  return '';\n};\n","import { setFirebaseConfig } from \"@gaddario98/react-firebase\";\nimport { storage } from \"@gaddario98/react-state\";\nimport firebase from \"@react-native-firebase/app\";\nimport {\n  getAuth,\n  sendPasswordResetEmail as sendPasswordResetEmailBase,\n} from \"@react-native-firebase/auth\";\n\nexport const setReactNativeFirebaseConfig = (\n  firebaseConfig: Parameters<typeof setFirebaseConfig>[0]\n) => {\n  firebase.setReactNativeAsyncStorage(storage);\n  setFirebaseConfig(firebaseConfig);\n};\n\nexport const sendPasswordResetEmail = (mail: string) =>\n  sendPasswordResetEmailBase(getAuth(), mail);\n\nexport { firebaseConfig } from \"@gaddario98/react-firebase\";\n"],"names":["sendPasswordResetEmailBase"],"mappings":"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"}