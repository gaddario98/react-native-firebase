{"version":3,"file":"index.mjs","sources":["../../../ui/EmailNotVerifiedContainer.tsx"],"sourcesContent":["import {\n  contentLayout,\n  padding,\n  Button,\n  Text,\n  useNotification,\n} from \"@gaddario98/react-native-ui\";\nimport { withMemo } from \"@gaddario98/utiles\";\nimport { View } from \"react-native\";\nimport {\n  getAuth,\n  reload,\n  sendEmailVerification,\n} from \"@react-native-firebase/auth\";\nimport { useAuthState } from \"@gaddario98/react-auth\";\n\nconst EmailNotVerifiedContainer = withMemo(() => {\n  const [auth] = useAuthState();\n  const { showNotification } = useNotification();\n\n  if (!auth?.id || auth?.accountVerified) return;\n\n  return (\n    <View style={[contentLayout, { padding, paddingBottom: 0 }]}>\n      <View\n        style={[\n          contentLayout,\n          {\n            padding,\n            backgroundColor: \"#FFEBEE\",\n            borderColor: \"#B00020\",\n            borderRadius: 4,\n            borderWidth: 1,\n          },\n        ]}\n      >\n        <Text\n          text=\"emailNotVerified\"\n          ns=\"auth\"\n          props={{ style: { color: \"#B00020\" } }}\n        />\n        <Button\n          text=\"sendNewEmail\"\n          ns=\"auth\"\n          variant=\"text\"\n          color=\"error\"\n          onPress={() => {\n            const user = getAuth().currentUser;\n            if (user) {\n              sendEmailVerification(user).then(() =>\n                showNotification({\n                  message: \"confirmationEmailSent\",\n                  type: \"success\",\n                  ns: \"auth\",\n                })\n              );\n            }\n          }}\n        />\n        <Button\n          text=\"controlEmail\"\n          ns=\"auth\"\n          variant=\"text\"\n          color=\"warning\"\n          onPress={() => {\n            const user = getAuth().currentUser;\n            if (user) {\n              reload(user);\n            }\n          }}\n        />\n      </View>\n    </View>\n  );\n});\nexport default EmailNotVerifiedContainer;\n"],"names":["_jsx","_jsxs"],"mappings":";;;;;;;AAgBA,MAAM,yBAAyB,GAAG,QAAQ,CAAC,MAAK;AAC9C,IAAA,MAAM,CAAC,IAAI,CAAC,GAAG,YAAY,EAAE;AAC7B,IAAA,MAAM,EAAE,gBAAgB,EAAE,GAAG,eAAe,EAAE;AAE9C,IAAA,IAAI,EAAC,IAAI,aAAJ,IAAI,KAAA,MAAA,GAAA,MAAA,GAAJ,IAAI,CAAE,EAAE,CAAA,KAAI,IAAI,KAAA,IAAA,IAAJ,IAAI,uBAAJ,IAAI,CAAE,eAAe,CAAA;QAAE;IAExC,QACEA,IAAC,IAAI,EAAA,EAAC,KAAK,EAAE,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,YACzDC,IAAA,CAAC,IAAI,EAAA,EACH,KAAK,EAAE;gBACL,aAAa;AACb,gBAAA;oBACE,OAAO;AACP,oBAAA,eAAe,EAAE,SAAS;AAC1B,oBAAA,WAAW,EAAE,SAAS;AACtB,oBAAA,YAAY,EAAE,CAAC;AACf,oBAAA,WAAW,EAAE,CAAC;AACf,iBAAA;aACF,EAAA,QAAA,EAAA,CAEDD,GAAA,CAAC,IAAI,EAAA,EACH,IAAI,EAAC,kBAAkB,EACvB,EAAE,EAAC,MAAM,EACT,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAA,CACtC,EACFA,GAAA,CAAC,MAAM,IACL,IAAI,EAAC,cAAc,EACnB,EAAE,EAAC,MAAM,EACT,OAAO,EAAC,MAAM,EACd,KAAK,EAAC,OAAO,EACb,OAAO,EAAE,MAAK;AACZ,wBAAA,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC,WAAW;wBAClC,IAAI,IAAI,EAAE;4BACR,qBAAqB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAC/B,gBAAgB,CAAC;AACf,gCAAA,OAAO,EAAE,uBAAuB;AAChC,gCAAA,IAAI,EAAE,SAAS;AACf,gCAAA,EAAE,EAAE,MAAM;AACX,6BAAA,CAAC,CACH;wBACH;oBACF,CAAC,EAAA,CACD,EACFA,GAAA,CAAC,MAAM,EAAA,EACL,IAAI,EAAC,cAAc,EACnB,EAAE,EAAC,MAAM,EACT,OAAO,EAAC,MAAM,EACd,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,MAAK;AACZ,wBAAA,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC,WAAW;wBAClC,IAAI,IAAI,EAAE;4BACR,MAAM,CAAC,IAAI,CAAC;wBACd;AACF,oBAAA,CAAC,EAAA,CACD,CAAA,EAAA,CACG,EAAA,CACF;AAEX,CAAC;;;;"}